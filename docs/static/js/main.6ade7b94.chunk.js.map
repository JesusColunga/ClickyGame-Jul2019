{"version":3,"sources":["img/f1.jpg","components/Header.js","components/DriverCard/index.js","components/GroupCard/index.js","components/Body.js","components/Drivers.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","f1","alt","id","DriverCard","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","key","driv","Component","GroupCard","drvs","map","driver","components_DriverCard","Drivers2","require","shuffle","Body","components_GroupCard","slice","Footer","App","components_Header","components_Body","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0PCmBzBC,MAbf,WACE,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAIC,IAAI,KAAKC,GAAG,wDCSnBC,cAfZ,SAAAA,EAAaC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACXH,0EAIP,OACGT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOa,IAAKJ,KAAKH,MAAMQ,MACnCjB,EAAAC,EAAAC,cAAA,cACGF,EAAAC,EAAAC,cAAA,OAAKE,IAAK,YAAcQ,KAAKH,MAAMQ,KAAMd,UAAU,eAAeG,IAAKM,KAAKH,MAAMQ,gBATxEC,aCkBVC,MAjBf,SAAmBV,GAChB,OACGT,EAAAC,EAAAC,cAAA,WAIGF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,0BAEIM,EAAMW,KAAKC,IAAK,SAAAC,GAAM,OACpBtB,EAAAC,EAAAC,cAACqB,EAAD,CAAYN,KAAMK,SCP7BE,EADUC,EAAQ,GACPC,CCNA,CACX,wBACA,oBACA,wBACA,sBACA,uBACA,qBACA,qBACA,wBACA,qBACA,wBACA,wBACA,qBACA,wBACA,uBACA,uBACA,qBACA,uBACA,wBACA,sBACA,6BDEWC,MAdf,WACG,OACG3B,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,qFAGAF,EAAAC,EAAAC,cAAC0B,EAAD,CAAWR,KAAMI,EAASK,MAAM,EAAG,KACnC7B,EAAAC,EAAAC,cAAC0B,EAAD,CAAWR,KAAMI,EAASK,MAAM,EAAG,MACnC7B,EAAAC,EAAAC,cAAC0B,EAAD,CAAWR,KAAMI,EAASK,MAAM,GAAI,MACpC7B,EAAAC,EAAAC,cAAC0B,EAAD,CAAWR,KAAMI,EAASK,MAAM,GAAI,cEN9BC,MARf,WACE,OACE9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UCUJ4B,MAVf,WACE,OACE/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8B,EAAD,MACAhC,EAAAC,EAAAC,cAAC+B,EAAD,MACAjC,EAAAC,EAAAC,cAACgC,EAAD,QCAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6ade7b94.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/f1.8ecf3a3b.jpg\";","/* src/components/Header.js */\n\nimport React from \"react\";\nimport \"../styles/Header.css\"\nimport f1 from \"../img/f1.jpg\";\n\nfunction Header() {\n  return (\n    <div>\n      <h1> Clicky Game! </h1>\n\n      <div className=\"container\">\n        <img src={f1} alt=\"F1\" id=\"imgBB\"/>\n      </div>\n\n    </div>\n  );\n}\n\nexport default Header;\n","/* src/components/DriverCard/index.js */\n\nimport React, {Component} from \"react\";\n//import \"../style.css\"\n\nclass DriverCard extends Component {\n   constructor (props) {\n      super (props);\n   }\n\n   render() {\n      return (\n         <div className=\"card\" key={this.props.driv}>\n            <button>\n               <img src={\"./images/\" + this.props.driv} className=\"card-img-top\" alt={this.props.driv}></img>\n            </button>    \n         </div>\n      );\n   }\n}\n\nexport default DriverCard;\n\n\n/*\nfunction DriverCard(props) {\n   return (\n      <div>\n         <div className=\"card-group\">                     \n         \n            {props.drvs.map( driver => \n               <div className=\"card\" key={driver}>\n                  <button>\n                     <img src={\"./images/\" + driver} className=\"card-img-top\" alt={driver}></img>\n                  </button>    \n               </div>\n            )}\n\n         </div>\n      </div>\n   );\n}\n\n\n*/","/* src/components/GroupCard/index.js */\n\nimport React from \"react\";\n//import \"../style.css\"\nimport DriverCard from \"../DriverCard\";\n\nfunction GroupCard(props) {\n   return (\n      <div>\n         {/* <DriverCard driv={props.drvs[0]} /> */}\n\n\n         <div className=\"card-group\">                       {/* row  */}\n         \n            {props.drvs.map( driver => \n               <DriverCard driv={driver} />\n            )}\n\n         </div>\n      </div>\n   );\n}\n\nexport default GroupCard;\n\n/*\nfunction GroupCard(props) {\n   return (\n      <div>\n         <DriverCard driv={props.drvs[0]} />\n\n\n         <div className=\"card-group\">                       {/* row  * /}\n         \n         {props.drvs.map( driver => \n            <div className=\"card\" key={driver}>\n               <button>\n                  <img src={\"./images/\" + driver} className=\"card-img-top\" alt={driver}></img>\n               </button>    \n            </div>\n         )}\n\n      </div>\n   </div>\n);\n}\n\n*/","/* src/components/Body.js */\n\nimport React from \"react\";\nimport \"../styles/Body.css\"\nimport Drivers from \"./Drivers\";\n//import DriverCard from \"./driverCard\";\nimport GroupCard from \"./GroupCard\";\nlet shuffle = require('shuffle-array');\nlet Drivers2 = shuffle(Drivers);\n\nfunction Body() {\n   return (\n      <div>\n         <p>\n         Click on an image to earn points, but don't click on any more than once!\n         </p>\n         <GroupCard drvs={Drivers2.slice(0, 5)} />\n         <GroupCard drvs={Drivers2.slice(5, 10)} />\n         <GroupCard drvs={Drivers2.slice(10, 15)} />\n         <GroupCard drvs={Drivers2.slice(15, 20)} />\n      </div>\n   );\n}\n\nexport default Body;\n","/* src/components/Drivers.js */\n\nexport default [\n    \"3_DanielRicciardo.jpg\",\n    \"4_LandoNorris.jpg\",\n    \"5_SebastianVettel.jpg\",\n    \"7_KimiRaikkonen.jpg\",\n    \"8_RomainGrosjean.jpg\",\n    \"10_PierreGasly.jpg\",\n    \"11_SergioPerez.jpg\",\n    \"16_CharlesLeclerc.jpg\",\n    \"18_LanceStroll.jpg\",\n    \"20_KevinMagnussen.jpg\",\n    \"23_AlexanderAlbon.jpg\",\n    \"26_DaniilKvyat.jpg\",\n    \"27_NicoHulkenberg.jpg\",\n    \"33_MaxVerstappen.jpg\",\n    \"44_LewisHamilton.jpg\",\n    \"55_CarlosSainz.jpg\",\n    \"63_GeorgeRussell.jpg\",\n    \"77_ValtteriBottas.jpg\",\n    \"88_RobertKubica.jpg\",\n    \"99_AntonioGiovinazzi.jpg\"\n];\n","/* src/components/Footer.js */\n\nimport React from \"react\";\nimport \"../styles/Footer.css\"\n\nfunction Footer() {\n  return (\n    <div className=\"foot\">\n\n    </div>\n  );\n}\n\nexport default Footer;\n","/* src/App.js */\n\nimport React  from 'react';\nimport Header from \"./components/Header\";\nimport Body   from \"./components/Body\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Body />\n      <Footer />\n    </div>    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// src/index.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}